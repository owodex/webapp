# Generated by Django 5.1.4 on 2025-06-17 13:00

import ckeditor.fields
import django.db.models.deletion
import django.utils.timezone
import phonenumber_field.modelfields
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('slug', models.SlugField(max_length=100, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='GiftCard',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('image', models.ImageField(upload_to='giftcards/')),
                ('is_active', models.BooleanField(default=True)),
            ],
        ),
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('slug', models.SlugField(unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('phone_number', phonenumber_field.modelfields.PhoneNumberField(blank=True, max_length=128, null=True, region=None)),
                ('username', models.CharField(max_length=150, unique=True)),
                ('referral_code', models.CharField(blank=True, max_length=10, unique=True)),
                ('bonus_amount', models.DecimalField(decimal_places=2, default=0.0, max_digits=10)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('referred_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='referrals', to=settings.AUTH_USER_MODEL)),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Beneficiary',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('account_number', models.CharField(max_length=20)),
                ('bank_name', models.CharField(max_length=100)),
                ('name', models.CharField(max_length=100)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'Beneficiaries',
            },
        ),
        migrations.CreateModel(
            name='GiftCardCurrency',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('currency', models.CharField(max_length=2)),
                ('currency_name', models.CharField(max_length=50)),
                ('giftcard', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='currencies', to='app.giftcard')),
            ],
        ),
        migrations.CreateModel(
            name='GiftCardDenomination',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', models.CharField(max_length=20)),
                ('giftcard', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='denominations', to='app.giftcard')),
            ],
        ),
        migrations.CreateModel(
            name='GiftCardTransaction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('giftcard_name', models.CharField(max_length=100)),
                ('image', models.ImageField(blank=True, null=True, upload_to='giftcard_transaction_images/')),
                ('denomination', models.CharField(max_length=10)),
                ('amount', models.DecimalField(decimal_places=2, max_digits=15)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('completed', 'Completed'), ('cancelled', 'Cancelled')], default='pending', max_length=10)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('currency', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.giftcardcurrency')),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='GiftCardImage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(upload_to='giftcard_images/')),
                ('transaction', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='images', to='app.giftcardtransaction')),
            ],
        ),
        migrations.CreateModel(
            name='GiftCardType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(max_length=20)),
                ('giftcard', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='types', to='app.giftcard')),
            ],
        ),
        migrations.AddField(
            model_name='giftcardtransaction',
            name='card_type',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.giftcardtype'),
        ),
        migrations.CreateModel(
            name='Notification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255, null=True)),
                ('message', models.TextField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('is_read', models.BooleanField(default=False)),
                ('is_for_all_users', models.BooleanField(default=False)),
                ('users', models.ManyToManyField(blank=True, related_name='notifications', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Post',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('slug', models.SlugField(max_length=200, unique=True)),
                ('content', ckeditor.fields.RichTextField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('author', models.CharField(max_length=100, null=True)),
                ('image', models.ImageField(blank=True, null=True, upload_to='blog_images/')),
                ('status', models.CharField(choices=[('draft', 'Draft'), ('published', 'Published')], default='draft', max_length=10)),
                ('meta_title', models.CharField(blank=True, max_length=70)),
                ('meta_description', models.CharField(blank=True, max_length=200)),
                ('meta_keywords', models.CharField(blank=True, max_length=255)),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.category')),
                ('tags', models.ManyToManyField(to='app.tag')),
            ],
        ),
        migrations.CreateModel(
            name='Transaction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateTimeField(auto_now_add=True)),
                ('service', models.CharField(choices=[('giftcard', 'Giftcard Sale'), ('buy_giftcard', 'Giftcard Purchase'), ('deposit', 'Deposit'), ('bill_payment', 'Bill Payment'), ('money_transfer', 'Money Transfer'), ('signup_bonus', 'Signup Bonus'), ('airtime', 'Airtime Purchase'), ('data', 'Data Purchase'), ('cable', 'Cable TV'), ('electricity', 'Electricity Bill'), ('bank transfer', 'Bank Transfer')], max_length=50)),
                ('invoice_id', models.CharField(max_length=20, unique=True)),
                ('amount', models.DecimalField(decimal_places=2, max_digits=15)),
                ('email', models.EmailField(blank=True, max_length=254, null=True)),
                ('account_number', models.CharField(blank=True, max_length=20, null=True)),
                ('bank_name', models.CharField(blank=True, max_length=100, null=True)),
                ('transaction_type', models.CharField(choices=[('credit', 'Credit'), ('debit', 'Debit')], max_length=10)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('completed', 'Completed'), ('cancelled', 'Cancelled')], default='pending', max_length=20)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-date'],
            },
        ),
        migrations.AddField(
            model_name='giftcardtransaction',
            name='transaction',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='giftcard_transaction', to='app.transaction'),
        ),
        migrations.CreateModel(
            name='ElectricityRequest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('operator', models.CharField(choices=[('ekedc', 'EKEDC'), ('ikedc', 'IKEDC'), ('aedc', 'AEDC')], max_length=10)),
                ('meter_number', models.CharField(max_length=50)),
                ('plan', models.CharField(choices=[('prepaid', 'Prepaid'), ('postpaid', 'Postpaid')], max_length=10)),
                ('account_name', models.CharField(max_length=100)),
                ('amount', models.DecimalField(decimal_places=2, max_digits=10)),
                ('token', models.CharField(blank=True, max_length=50, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('transaction', models.OneToOneField(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='electricity_request', to='app.transaction')),
            ],
        ),
        migrations.CreateModel(
            name='DepositRequest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount', models.DecimalField(decimal_places=2, max_digits=15)),
                ('proof', models.ImageField(upload_to='deposit_proofs/')),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('approved', 'Approved'), ('rejected', 'Rejected')], default='pending', max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('transaction', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='deposit_request', to='app.transaction')),
            ],
        ),
        migrations.CreateModel(
            name='DataRequest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('phone', phonenumber_field.modelfields.PhoneNumberField(max_length=128, region=None)),
                ('network', models.CharField(choices=[('mtn', 'MTN'), ('airtel', 'Airtel'), ('glo', 'Glo'), ('9mobile', '9mobile')], max_length=10)),
                ('data_plan', models.CharField(choices=[('1gb', '1GB'), ('2gb', '2GB'), ('5gb', '5GB'), ('10gb', '10GB')], max_length=10)),
                ('amount', models.DecimalField(decimal_places=2, max_digits=10)),
                ('transaction', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='data_request', to='app.transaction')),
            ],
        ),
        migrations.CreateModel(
            name='CableRequest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('provider', models.CharField(choices=[('dstv', 'DSTV'), ('gotv', 'GOtv'), ('startimes', 'StarTimes')], max_length=20)),
                ('smart_card_number', models.CharField(max_length=20)),
                ('package', models.CharField(max_length=50)),
                ('account_name', models.CharField(max_length=100)),
                ('amount', models.DecimalField(decimal_places=2, max_digits=10)),
                ('transaction', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='cable_request', to='app.transaction')),
            ],
        ),
        migrations.CreateModel(
            name='AirtimeRequest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('phone', phonenumber_field.modelfields.PhoneNumberField(max_length=128, region=None)),
                ('network', models.CharField(choices=[('mtn', 'MTN'), ('airtel', 'Airtel'), ('glo', 'Glo'), ('9mobile', '9mobile')], max_length=10)),
                ('amount', models.DecimalField(decimal_places=2, max_digits=10, null=True)),
                ('transaction', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='airtime_request', to='app.transaction')),
            ],
        ),
        migrations.CreateModel(
            name='Wallet',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('balance', models.DecimalField(decimal_places=2, default=0.0, max_digits=10)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='wallet', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='transaction',
            name='wallet',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='transactions', to='app.wallet'),
        ),
        migrations.CreateModel(
            name='GiftCardRate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rate', models.CharField(max_length=20)),
                ('currency', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.giftcardcurrency')),
                ('denomination', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.giftcarddenomination')),
                ('giftcard', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='rates', to='app.giftcard')),
                ('card_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app.giftcardtype')),
            ],
            options={
                'unique_together': {('giftcard', 'currency', 'card_type', 'denomination')},
            },
        ),
    ]
